---
- name: Converge
  hosts: molecule
  gather_facts: true
  become: true
  become_user: root
  tasks:
    - name: Check uname
      ansible.builtin.raw: uname -a
      register: result
      changed_when: false

    - name: Print some info
      ansible.builtin.debug:
        var: result.stdout

    - name: Load the default vars
      ansible.builtin.include_vars:
        file: ../../default/vars/vars.yml

    - name: Set the test name
      ansible.builtin.set_fact:
        test_name: "{{ molecule_scenario_name | replace('integration_', '') }}"

    - name: Set the test path
      ansible.builtin.set_fact:
        test_path: "{{ integration_tests_path }}{{ test_name }}"

    - name: Load the role's default vars
      ansible.builtin.include_vars:
        file: "{{ test_path }}/defaults/main.yml"

    - name: Load the role's extra vars
      ansible.builtin.include_vars:
        file: "{{ test_path }}/vars/main.yml"

    - name: Check for test vars
      delegate_to: localhost
      become: false
      ansible.builtin.stat:
        path: "{{ test_path }}/tests/vars.yml"
        get_mime: false
        get_checksum: false
        get_attributes: false
        follow: true
      register: vars_test

    - name: Set the test vars
      when: vars_test.stat.exists
      ansible.builtin.include_vars:
        file: "{{ test_path }}/tests/vars.yml"

    - name: "Check test vars for {{ integration_flavor }}"
      delegate_to: localhost
      become: false
      ansible.builtin.stat:
        path: "{{ test_path }}/tests/vars-{{ integration_flavor }}.yml"
        get_mime: false
        get_checksum: false
        get_attributes: false
        follow: true
      register: vars_test

    - name: "Set test vars for {{ integration_flavor }}"
      when: vars_test.stat.exists
      ansible.builtin.include_vars:
        file: "{{ test_path }}/tests/vars-{{ integration_flavor }}.yml"

    - name: "Check test vars for {{ integration_subset }}"
      delegate_to: localhost
      become: false
      ansible.builtin.stat:
        path: "{{ test_path }}/tests/vars-{{ integration_subset }}.yml"
        get_mime: false
        get_checksum: false
        get_attributes: false
        follow: true
      register: vars_test

    - name: "Set test vars for {{ integration_subset }}"
      when: vars_test.stat.exists
      ansible.builtin.include_vars:
        file: "{{ test_path }}/tests/vars-{{ integration_subset }}.yml"

    - name: Check for setup files
      delegate_to: localhost
      become: false
      ansible.builtin.stat:
        path: "{{ test_path }}/tests/setup.yml"
        get_mime: false
        get_checksum: false
        get_attributes: false
        follow: true
      register: setup_test

    - name: Set up integration tests
      when: setup_test.stat.exists
      ansible.builtin.include_tasks: "{{ test_path }}/tests/setup.yml"

    - name: "Check setup files for {{ integration_flavor }}"
      delegate_to: localhost
      become: false
      ansible.builtin.stat:
        path: "{{ test_path }}/tests/setup-{{ integration_flavor }}.yml"
        get_mime: false
        get_checksum: false
        get_attributes: false
        follow: true
      register: setup_test

    - name: "Set up integration tests for {{ integration_flavor }}"
      when: setup_test.stat.exists
      ansible.builtin.include_tasks: "{{ test_path }}/tests/setup-{{ integration_flavor }}.yml"

    - name: "Check setup files for {{ integration_subset }}"
      delegate_to: localhost
      become: false
      ansible.builtin.stat:
        path: "{{ test_path }}/tests/setup-{{ integration_subset }}.yml"
        get_mime: false
        get_checksum: false
        get_attributes: false
        follow: true
      register: setup_test

    - name: "Set up integration tests for {{ integration_subset }}"
      when: setup_test.stat.exists
      ansible.builtin.include_tasks: "{{ test_path }}/tests/setup-{{ integration_subset }}.yml"

    - name: "Integration test: {{ test_name }}"
      ansible.builtin.include_role:
        name: "{{ test_path }}"
