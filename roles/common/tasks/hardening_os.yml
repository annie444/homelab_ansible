---
- name: Ensure root access via console device is disabled
  ansible.builtin.file:
    path: /etc/securetty
    state: touch
    mode: "0600"
    modification_time: preserve
    access_time: preserve
  when: common_os_hardening | bool

- name: Create the hardened sysctl file
  ansible.builtin.file:
    path: /etc/sysctl.d/99-hardening.conf
    state: touch
    mode: "0600"
    owner: root
    group: root
    modification_time: preserve
    access_time: preserve
  when: common_os_hardening | bool

- name: Ensure Kernel sysctl hardening is set
  ansible.posix.sysctl:
    sysctl_file: /etc/sysctl.d/99-hardening.conf
    ignoreerrors: false
    reload: true
    sysctl_set: true
    state: present
    name: "{{ item.name }}"
    value: "{{ item.value }}"
  loop: "{{ common_sysctl_hardening_options }}"
  register: _sysctl
  when: common_os_hardening | bool
  notify: kernel_modules_disabled

- name: Remove Kernel hardening options
  ansible.builtin.file:
    path: /etc/sysctl.d/99-hardening.conf
    state: absent
  when: not (common_os_hardening | bool)

- name: Create the hardened user namespace sysctl file
  ansible.builtin.file:
    path: /etc/sysctl.d/99-hardening-user-namespaces-disabled.conf
    state: touch
    mode: "0600"
    owner: root
    group: root
    modification_time: preserve
    access_time: preserve
  when:
    - common_os_hardening | bool
    - common_os_hardening_disable_user_namespaces | bool

- name: Ensure Kernel user namespaces are disabled
  ansible.posix.sysctl:
    sysctl_file: /etc/sysctl.d/99-hardening-user-namespaces-disabled.conf
    ignoreerrors: false
    reload: true
    sysctl_set: true
    state: present
    name: "user.max_user_namespaces"
    value: 0
  when:
    - common_os_hardening | bool
    - common_os_hardening_disable_user_namespaces | bool

- name: Remove Kernel user namespace limits
  ansible.builtin.file:
    path: /etc/sysctl.d/99-hardening-user-namespaces-disabled.conf
    state: absent
  when: not (common_os_hardening | bool) or not (common_os_hardening_disable_user_namespaces | bool)

- name: Ensure Kernel module loading is temporary allowed during Ansible operation
  ansible.builtin.file:
    path: /etc/sysctl.d/99-hardening-kernel-modules-disabled.conf
    state: absent
  when: common_os_hardening | bool
  notify: kernel_modules_disabled

- name: Ensure IPv6 privacy extensions are enabled in systemd
  ansible.builtin.copy:
    src: networkd-ipv6-privacy-extensions.conf
    dest: /etc/systemd/network/ipv6-privacy-extensions.conf
    mode: "0600"
    owner: root
    group: root
  register: _ipv6_privacy_extensions
  when: common_os_hardening | bool

- name: Ensure random MAC address are enabled in NetworkManager
  ansible.builtin.template:
    src: random-mac.conf.j2
    dest: /etc/NetworkManager/conf.d/00-random-mac.conf
    mode: "0600"
    owner: root
    group: root
  register: _random_mac_address
  when: common_random_mac | bool

- name: Ensure coredump configuration directory is present
  ansible.builtin.file:
    path: /etc/systemd/coredump.conf.d
    state: directory
    owner: root
    group: root
    mode: "0755"
  when: common_os_hardening | bool

- name: Ensure coredump storage is disabled in systemd
  ansible.builtin.copy:
    src: coredump-disabled.conf
    dest: /etc/systemd/coredump.conf.d/disabled.conf
    mode: "0600"
  when: common_os_hardening | bool

- name: Ensure Systemd coredump socket and service are disabled
  ansible.builtin.systemd:
    name: "{{ item }}"
    enabled: false
    state: stopped
    masked: true
  ignore_errors: true # noqa ignore-errors
  loop:
    - systemd-coredump
    - systemd-coredump.socket

- name: Ensure Systemd debug-shell service is disabled
  ansible.builtin.systemd:
    name: debug-shell
    enabled: false
    state: stopped
    masked: true
  ignore_errors: true # noqa ignore-errors

- name: Ensure security limits configuration directory is present
  ansible.builtin.file:
    path: /etc/security/limits.d
    state: directory
    owner: root
    group: root
    mode: "0755"
  when: common_os_hardening | bool

- name: Ensure coredump is disabled in security limits configuration
  community.general.pam_limits:
    dest: /etc/security/limits.d/50-hard-core.conf
    domain: "*"
    limit_type: hard
    limit_item: core
    value: "0"
  when: common_os_hardening | bool

- name: Ensure rng-tools is installed
  ansible.builtin.dnf:
    state: present
    name: rng-tools
    install_weak_deps: false
  retries: 10
  delay: 1
  register: _
  until: _ is successful
  when:
    - common_os_hardening | bool
    - not (_ostree | bool)

- name: Ensure rng-tools is installed
  community.general.rpm_ostree_pkg:
    state: present
    name: rng-tools
  when:
    - common_os_hardening | bool
    - _ostree | bool

- name: Ensure rngd is enabled
  ansible.builtin.systemd_service:
    name: rngd
    enabled: "{{ common_os_hardening | bool }}"
    state: "{{ (common_os_hardening | bool) | ternary('started', 'stopped') }}"
  tags:
    - molecule-notest

- name: Ensure vulnerable or rarely used Kernel modules loading is disallowed
  ansible.builtin.template:
    src: modprobe-hardening.conf.j2
    dest: /etc/modprobe.d/hardening.conf
    mode: "0600"
  when: common_os_hardening | bool

- name: Ensure interactive session timeout is set
  ansible.builtin.lineinfile:
    path: /etc/profile.d/tmout.sh
    create: true
    regexp: "TMOUT="
    line: "declare -xr TMOUT={{ common_os_hardening_interactive_timeout }}"
    owner: root
    group: root
    mode: "0644"
  when: common_os_hardening | bool

- name: Ensure hardening is disabled
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  when: not (common_os_hardening | bool)
  register: _disable_hardening
  loop:
    - /etc/securetty
    - /etc/sysctl.d/99-hardening.conf
    - /etc/systemd/network/ipv6-privacy-extensions.conf
    - /etc/systemd/coredump.conf.d/disabled.conf
    - /etc/security/limits.d/50-hard-core.conf
    - /etc/modprobe.d/hardening.conf
    - /etc/profile.d/tmout.sh

- name: Ensure random MAC address is disabled
  ansible.builtin.file:
    path: /etc/NetworkManager/conf.d/00-random-mac.conf
    state: absent
  when: not (common_random_mac | bool)
  register: _disable_random_mac_address

- name: Ensure networkd is restarted
  ansible.builtin.systemd_service:
    name: systemd-networkd
    state: restarted
  changed_when: false
  when: _ipv6_privacy_extensions.changed or _disable_hardening.changed # noqa no-handler
  tags:
    - molecule-notest

- name: Ensure network manager is restarted
  ansible.builtin.systemd_service:
    name: NetworkManager
    state: restarted
  changed_when: false
  when: _random_mac_address.changed or _disable_random_mac_address.changed # noqa no-handler
  tags:
    - molecule-notest

- name: Ensure Kernel sysctl is reloaded
  ansible.builtin.command: /usr/sbin/sysctl --system
  changed_when: false
  when: _sysctl.changed or _disable_hardening.changed # noqa no-handler
